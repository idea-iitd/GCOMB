%!PS-Adobe-2.0 EPSF-2.0
%%Title: output.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Jul 15 07:32:13 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 327
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (output.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (aarora)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 15 07:32:13 2016)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 327 lineto 50 327 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1608 768 M
63 0 V
5096 0 R
-63 0 V
stroke
1464 768 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 0.1)]
] -113.3 MRshow
1.000 UL
LTb
1608 957 M
31 0 V
5128 0 R
-31 0 V
1608 1207 M
31 0 V
5128 0 R
-31 0 V
1608 1335 M
31 0 V
5128 0 R
-31 0 V
-5128 61 R
63 0 V
5096 0 R
-63 0 V
stroke
1464 1396 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 1)]
] -113.3 MRshow
1.000 UL
LTb
1608 1585 M
31 0 V
5128 0 R
-31 0 V
1608 1835 M
31 0 V
5128 0 R
-31 0 V
1608 1963 M
31 0 V
5128 0 R
-31 0 V
-5128 61 R
63 0 V
5096 0 R
-63 0 V
stroke
1464 2024 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 10)]
] -113.3 MRshow
1.000 UL
LTb
1608 2213 M
31 0 V
5128 0 R
-31 0 V
1608 2463 M
31 0 V
5128 0 R
-31 0 V
1608 2591 M
31 0 V
5128 0 R
-31 0 V
-5128 61 R
63 0 V
5096 0 R
-63 0 V
stroke
1464 2652 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 100)]
] -113.3 MRshow
1.000 UL
LTb
1608 2840 M
31 0 V
5128 0 R
-31 0 V
1608 3090 M
31 0 V
5128 0 R
-31 0 V
1608 3218 M
31 0 V
5128 0 R
-31 0 V
-5128 61 R
63 0 V
5096 0 R
-63 0 V
stroke
1464 3279 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 1000)]
] -113.3 MRshow
1.000 UL
LTb
1608 3468 M
31 0 V
5128 0 R
-31 0 V
1608 3718 M
31 0 V
5128 0 R
-31 0 V
1608 3846 M
31 0 V
5128 0 R
-31 0 V
-5128 61 R
63 0 V
5096 0 R
-63 0 V
stroke
1464 3907 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 10000)]
] -113.3 MRshow
1.000 UL
LTb
1608 4096 M
31 0 V
5128 0 R
-31 0 V
1608 4346 M
31 0 V
5128 0 R
-31 0 V
1608 4474 M
31 0 V
5128 0 R
-31 0 V
-5128 61 R
63 0 V
5096 0 R
-63 0 V
stroke
1464 4535 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 100000)]
] -113.3 MRshow
1.000 UL
LTb
1608 768 M
0 63 V
0 3704 R
0 -63 V
stroke
1608 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 0)]
] -113.3 MCshow
1.000 UL
LTb
2253 768 M
0 63 V
0 3704 R
0 -63 V
stroke
2253 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 25)]
] -113.3 MCshow
1.000 UL
LTb
2898 768 M
0 63 V
0 3704 R
0 -63 V
stroke
2898 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 50)]
] -113.3 MCshow
1.000 UL
LTb
3543 768 M
0 63 V
0 3704 R
0 -63 V
stroke
3543 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 75)]
] -113.3 MCshow
1.000 UL
LTb
4188 768 M
0 63 V
0 3704 R
0 -63 V
stroke
4188 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 100)]
] -113.3 MCshow
1.000 UL
LTb
4832 768 M
0 63 V
0 3704 R
0 -63 V
stroke
4832 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 125)]
] -113.3 MCshow
1.000 UL
LTb
5477 768 M
0 63 V
0 3704 R
0 -63 V
stroke
5477 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 150)]
] -113.3 MCshow
1.000 UL
LTb
6122 768 M
0 63 V
0 3704 R
0 -63 V
stroke
6122 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 175)]
] -113.3 MCshow
1.000 UL
LTb
6767 768 M
0 63 V
0 3704 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 340.0 0.0 true true 0 ( 200)]
] -113.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1608 4535 N
0 -3767 V
5159 0 V
0 3767 V
-5159 0 V
Z stroke
LCb setrgbcolor
192 2651 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 420.0 0.0 true true 0 (Time)]
] -140.0 MCshow
grestore
LTb
LCb setrgbcolor
4187 168 M
[ [(Helvetica) 420.0 0.0 true true 0 (Seeds)]
] -140.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.300 UP
5.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
2258 5361 M
[ [(Helvetica) 320.0 0.0 true true 0 (CELF)]
] -106.7 MRshow
LT0
LC0 setrgbcolor
2402 5361 M
639 0 V
1634 2795 M
26 0 V
77 33 V
129 168 V
387 393 V
645 228 V
645 175 V
645 147 V
644 109 V
645 48 V
645 108 V
645 37 V
1634 2795 Pent
1660 2795 Pent
1737 2828 Pent
1866 2996 Pent
2253 3389 Pent
2898 3617 Pent
3543 3792 Pent
4188 3939 Pent
4832 4048 Pent
5477 4096 Pent
6122 4204 Pent
6767 4241 Pent
2721 5361 Pent
% End plot #1
% Begin plot #2
2.300 UP
5.000 UL
LT0
LC1 setrgbcolor
LCb setrgbcolor
2258 5121 M
[ [(Helvetica) 320.0 0.0 true true 0 (CELF++)]
] -106.7 MRshow
LT0
LC1 setrgbcolor
2402 5121 M
639 0 V
1634 2721 M
26 0 V
77 32 V
129 152 V
387 366 V
645 346 V
645 66 V
645 149 V
644 97 V
645 64 V
645 85 V
645 67 V
1634 2721 Crs
1660 2721 Crs
1737 2753 Crs
1866 2905 Crs
2253 3271 Crs
2898 3617 Crs
3543 3683 Crs
4188 3832 Crs
4832 3929 Crs
5477 3993 Crs
6122 4078 Crs
6767 4145 Crs
2721 5121 Crs
% End plot #2
% Begin plot #3
2.300 UP
5.000 UL
LT0
LC2 setrgbcolor
LCb setrgbcolor
4049 5361 M
[ [(Helvetica) 320.0 0.0 true true 0 (TIM)]
] -106.7 MRshow
LT0
LC2 setrgbcolor
4193 5361 M
639 0 V
1634 1798 M
26 -88 V
77 -83 V
129 -41 V
387 25 V
645 19 V
645 90 V
645 -12 V
644 36 V
645 17 V
645 18 V
645 -9 V
1634 1798 Star
1660 1710 Star
1737 1627 Star
1866 1586 Star
2253 1611 Star
2898 1630 Star
3543 1720 Star
4188 1708 Star
4832 1744 Star
5477 1761 Star
6122 1779 Star
6767 1770 Star
4512 5361 Star
% End plot #3
% Begin plot #4
2.300 UP
5.000 UL
LT0
LC3 setrgbcolor
LCb setrgbcolor
4049 5121 M
[ [(Helvetica) 320.0 0.0 true true 0 (IMM)]
] -106.7 MRshow
LT0
LC3 setrgbcolor
4193 5121 M
639 0 V
1634 1557 M
26 -163 V
77 -78 V
129 -44 V
387 -9 V
645 23 V
645 25 V
645 32 V
644 35 V
645 -32 V
645 22 V
645 15 V
1634 1557 Box
1660 1394 Box
1737 1316 Box
1866 1272 Box
2253 1263 Box
2898 1286 Box
3543 1311 Box
4188 1343 Box
4832 1378 Box
5477 1346 Box
6122 1368 Box
6767 1383 Box
4512 5121 Box
% End plot #4
% Begin plot #5
2.300 UP
5.000 UL
LT0
LC4 setrgbcolor
LCb setrgbcolor
5840 5361 M
[ [(Helvetica) 320.0 0.0 true true 0 (PMC)]
] -106.7 MRshow
LT0
LC4 setrgbcolor
5984 5361 M
639 0 V
1634 1357 M
26 13 V
77 5 V
129 6 V
387 10 V
645 13 V
645 8 V
645 8 V
644 6 V
645 6 V
645 3 V
645 5 V
1634 1357 BoxF
1660 1370 BoxF
1737 1375 BoxF
1866 1381 BoxF
2253 1391 BoxF
2898 1404 BoxF
3543 1412 BoxF
4188 1420 BoxF
4832 1426 BoxF
5477 1432 BoxF
6122 1435 BoxF
6767 1440 BoxF
6303 5361 BoxF
% End plot #5
% Begin plot #6
2.300 UP
5.000 UL
LT0
LC5 setrgbcolor
LCb setrgbcolor
5840 5121 M
[ [(Helvetica) 320.0 0.0 true true 0 (EaSyIM)]
] -106.7 MRshow
LT0
LC5 setrgbcolor
5984 5121 M
639 0 V
1634 2189 M
26 157 V
77 229 V
129 179 V
387 243 V
645 183 V
645 106 V
645 174 V
644 72 V
645 -68 V
645 134 V
645 5 V
1634 2189 Circle
1660 2346 Circle
1737 2575 Circle
1866 2754 Circle
2253 2997 Circle
2898 3180 Circle
3543 3286 Circle
4188 3460 Circle
4832 3532 Circle
5477 3464 Circle
6122 3598 Circle
6767 3603 Circle
6303 5121 Circle
% End plot #6
1.000 UL
LTb
1608 4535 N
0 -3767 V
5159 0 V
0 3767 V
-5159 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
